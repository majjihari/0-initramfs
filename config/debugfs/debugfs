#!/bin/sh

debugroot="/mnt/debugfs"

echo "[+] preparing debug environment"

if [ ! -e /tmp/ubuntu-debugfs.flist ]; then
    wget https://hub.grid.tf/tf-official-apps/ubuntu-debugfs.flist -O /tmp/ubuntu-debugfs.flist
fi

mkdir -p ${debugroot}/backend
mkdir -p ${debugroot}/image

echo "[+] ensure debug environment sanity"
umount -r ${debugroot}/image 2> /dev/null
umount -r ${debugroot}/backend/ro 2> /dev/null

backendaddr=$(grep '^storage = ' /etc/zero-os/zero-os.toml | cut -d'"' -f2)

# killing previous debugfs instance
if ps aux | grep g8ufs | grep -q debugfs; then
    kill -9 $(ps aux | grep g8ufs | grep debugfs | awk '{ print $1 }' | xargs)
fi

echo "[+] starting the fuse filesystem"
g8ufs -backend ${debugroot}/backend -storage-url "${backendaddr}" -meta /tmp/ubuntu-debugfs.flist ${debugroot}/image/ &

echo "[+] waiting for the filesystem"
while [ ! -f ${debugroot}/image/bin/bash ]; do
    sleep 0.1
done

echo "[+] configuring environment"
cp -L /etc/resolv.conf ${debugroot}/image/etc/resolv.conf

mount -t proc none ${debugroot}/image/proc
mount -o bind /sys ${debugroot}/image/sys

mount -o bind /dev ${debugroot}/image/dev
mount -o bind /dev/pts ${debugroot}/image/dev/pts

echo "[+] entering debug environment"
chroot ${debugroot}/image /bin/bash

umount ${debugroot}/image/dev/pts
umount ${debugroot}/image/dev
umount ${debugroot}/image/sys
umount ${debugroot}/image/proc
umount ${debugroot}/image
umount ${debugroot}/backend/ro
